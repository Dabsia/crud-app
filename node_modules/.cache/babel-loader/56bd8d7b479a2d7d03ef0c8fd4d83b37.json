{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Academind\\\\Routing\\\\src\\\\components\\\\EditUser\\\\EditUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './EditUser.css';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateUser, getSingleUser } from '../../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditUser = () => {\n  _s();\n\n  const [userValues, setUserValues] = useState({\n    name: '',\n    email: '',\n    address: ''\n  });\n  const [err, setError] = useState('');\n  let {\n    uId\n  } = useParams();\n  console.log(uId);\n  const {\n    user\n  } = useSelector(state => state.data);\n  const {\n    name,\n    email,\n    address\n  } = userValues;\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    let {\n      name,\n      value\n    } = e.target;\n    setUserValues({ ...userValues,\n      [name]: value\n    });\n  };\n\n  useEffect(() => {\n    dispatch(getSingleUser(uId));\n  }, [uId, dispatch]);\n  useEffect(() => {\n    if (user) {\n      setUserValues({ ...user\n      });\n    }\n  }, [user]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!name || !email || !address) {\n      setError('Please fill all input values');\n    } else {\n      dispatch(updateUser(userValues, uId));\n      navigate('/');\n      setError('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formHolder\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/'),\n      className: \"back\",\n      children: \"Go back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"formContainer\",\n      children: [err && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"err\",\n        children: err\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputDivs\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"addInput\",\n          name: \"name\",\n          id: \"name\",\n          type: \"text\",\n          placeholder: \"Enter Name\",\n          onChange: handleChange,\n          value: name || ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputDivs\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"addInput\",\n          name: \"email\",\n          id: \"email\",\n          type: \"email\",\n          placeholder: \"Enter Email\",\n          onChange: handleChange,\n          value: email || ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputDivs\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"address\",\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"addInput\",\n          name: \"address\",\n          id: \"address\",\n          type: \"text\",\n          placeholder: \"Enter Address\",\n          onChange: handleChange,\n          value: address || ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputDivs\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"formAddBtn\",\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 7\n  }, this);\n};\n\n_s(EditUser, \"F47hKe6cizy37eU2qOnn645XV+o=\", false, function () {\n  return [useParams, useSelector, useNavigate, useDispatch];\n});\n\n_c = EditUser;\nexport default EditUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditUser\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Academind/Routing/src/components/EditUser/EditUser.js"],"names":["React","useState","useEffect","useNavigate","useParams","useDispatch","useSelector","updateUser","getSingleUser","EditUser","userValues","setUserValues","name","email","address","err","setError","uId","console","log","user","state","data","navigate","dispatch","handleChange","e","value","target","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport './EditUser.css'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateUser, getSingleUser } from '../../redux/actions'\r\n\r\n\r\n\r\nconst EditUser = () => {\r\n    const [userValues, setUserValues] = useState({\r\n        name: '',\r\n        email: '',\r\n        address: ''\r\n    })\r\n    const [err, setError] = useState('');\r\n\r\n    let {uId} = useParams()\r\n    \r\n    console.log(uId)\r\n    const { user } = useSelector(state => state.data)\r\n    \r\n    const {name, email, address} = userValues\r\n    \r\n    const navigate = useNavigate()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const handleChange = (e) => {\r\n        let { name, value } = e.target\r\n        setUserValues({...userValues, [name]: value})\r\n   }\r\n    \r\n        useEffect(() => {\r\n        dispatch(getSingleUser(uId))\r\n    }, [uId, dispatch])\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n                setUserValues({...user})\r\n            }\r\n        }, [user])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (!name || !email || !address) {\r\n            setError('Please fill all input values')\r\n        }\r\n        else {\r\n            dispatch(updateUser(userValues, uId))\r\n            navigate('/')\r\n            setError('')\r\n        }\r\n    }\r\n\r\n  return (\r\n      <div className='formHolder'>\r\n          <button onClick = {() => navigate('/')} className='back'>Go back</button>\r\n          <form onSubmit={handleSubmit} className='formContainer'>\r\n              {err && <p className='err'>{err}</p>}\r\n              <div className='inputDivs'>\r\n                <label htmlFor='name'>Name</label>\r\n                  <input\r\n                      className='addInput'\r\n                      name = 'name'\r\n                      id='name'\r\n                      type='text'\r\n                      placeholder='Enter Name'\r\n                      onChange={handleChange}\r\n                      value={name || ''}\r\n                  />\r\n              </div>\r\n              <div className='inputDivs'>\r\n                <label htmlFor='name'>Email</label>\r\n                  <input\r\n                      className='addInput'\r\n                      name = 'email'\r\n                      id='email' type='email' placeholder='Enter Email'\r\n                      onChange={handleChange}\r\n                      value={email || ''}\r\n                  />\r\n              </div>\r\n              <div className='inputDivs'>\r\n                <label htmlFor='address'>Address</label>\r\n                  <input\r\n                      className='addInput'\r\n                      name = 'address'\r\n                      id='address'\r\n                      type='text'\r\n                      placeholder='Enter Address'\r\n                      onChange={handleChange}\r\n                      value={address || ''}\r\n                  />\r\n              </div>\r\n              <div className='inputDivs'>\r\n                <button className='formAddBtn'>Add User</button>\r\n              </div>\r\n          </form>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default EditUser"]},"metadata":{},"sourceType":"module"}