{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Academind\\\\Routing\\\\src\\\\pages\\\\QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from 'react';\nimport { useParams, Route } from 'react-router-dom';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport Comments from '../components/comments/Comments';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: 1,\n  author: 'Dabsia',\n  text: 'Work hard and believe its going to pay offf'\n}, {\n  id: 2,\n  author: 'Dabo',\n  text: 'Learning React is fun'\n}];\n\nconst QuoteDetail = () => {\n  _s();\n\n  const params = useParams();\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n  console.log(params.quoteId);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Quote found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.quoteId}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetail, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Academind/Routing/src/pages/QuoteDetail.js"],"names":["React","Fragment","useParams","Route","HighlightedQuote","Comments","DUMMY_QUOTES","id","author","text","QuoteDetail","params","quote","find","quoteId","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,kBAAjC;AACA,OAAOC,gBAAP,MAA8B,uCAA9B;AAEA,OAAOC,QAAP,MAAqB,iCAArB;;AAEA,MAAMC,YAAY,GAAG,CACnB;AAACC,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,MAAM,EAAE,QAAhB;AAA0BC,EAAAA,IAAI,EAAE;AAAhC,CADmB,EAEnB;AAACF,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,MAAM,EAAE,MAAhB;AAAwBC,EAAAA,IAAI,EAAE;AAA9B,CAFmB,CAArB;;AAMA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAMC,MAAM,GAAGT,SAAS,EAAxB;AAEA,QAAMU,KAAK,GAAGN,YAAY,CAACO,IAAb,CAAkBD,KAAK,IAAIA,KAAK,CAACL,EAAN,KAAaI,MAAM,CAACG,OAA/C,CAAd;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACG,OAAnB;;AAEA,MAAG,CAACF,KAAJ,EAAU;AACR,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAEH,sBACE,QAAC,QAAD;AAAA,4BAEI,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAIA,KAAK,CAACH,IAAhC;AAAsC,MAAA,MAAM,EAAIG,KAAK,CAACJ;AAAtD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAK,WAAUG,MAAM,CAACG,OAAQ,WAAzC;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CApBD;;GAAMJ,W;UACaR,S;;;KADbQ,W;AAsBN,eAAeA,WAAf","sourcesContent":["import React, {Fragment} from 'react'\r\nimport { useParams, Route } from 'react-router-dom'\r\nimport HighlightedQuote  from '../components/quotes/HighlightedQuote'\r\n\r\nimport Comments from '../components/comments/Comments'\r\n\r\nconst DUMMY_QUOTES = [\r\n  {id: 1, author: 'Dabsia', text: 'Work hard and believe its going to pay offf'},\r\n  {id: 2, author: 'Dabo', text: 'Learning React is fun'}\r\n]\r\n\r\n\r\nconst QuoteDetail = () => {\r\n    const params = useParams()\r\n\r\n    const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId)\r\n\r\n    console.log(params.quoteId)\r\n\r\n    if(!quote){\r\n      return <p>No Quote found</p>\r\n    }\r\n\r\n  return (\r\n    <Fragment>\r\n        \r\n        <HighlightedQuote text = {quote.text} author = {quote.author}/>\r\n        <Route path = {`/quotes/${params.quoteId}/comments`}>\r\n          <Comments />\r\n        </Route>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default QuoteDetail"]},"metadata":{},"sourceType":"module"}