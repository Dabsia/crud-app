{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Academind\\\\Routing\\\\src\\\\pages\\\\QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote'; // import Comments from '../components/comments/Comments'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: 1,\n  author: 'Dabsia',\n  text: 'Work hard and believe its going to pay offf'\n}, {\n  id: 2,\n  author: 'Dabo',\n  text: 'Learning React is fun'\n}];\n\nconst QuoteDetail = () => {\n  _s();\n\n  const params = useParams();\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Quote found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetail, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Academind/Routing/src/pages/QuoteDetail.js"],"names":["React","Fragment","useParams","HighlightedQuote","DUMMY_QUOTES","id","author","text","QuoteDetail","params","quote","find","quoteId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,gBAAP,MAA8B,uCAA9B,C,CAEA;;;AAEA,MAAMC,YAAY,GAAG,CACnB;AAACC,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,MAAM,EAAE,QAAhB;AAA0BC,EAAAA,IAAI,EAAE;AAAhC,CADmB,EAEnB;AAACF,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,MAAM,EAAE,MAAhB;AAAwBC,EAAAA,IAAI,EAAE;AAA9B,CAFmB,CAArB;;AAMA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AAEA,QAAMQ,KAAK,GAAGN,YAAY,CAACO,IAAb,CAAkBD,KAAK,IAAIA,KAAK,CAACL,EAAN,KAAaI,MAAM,CAACG,OAA/C,CAAd;;AAEA,MAAG,CAACF,KAAJ,EAAU;AACR,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAEH,sBACE,QAAC,QAAD;AAAA,2BACI,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAIA,KAAK,CAACH,IAAhC;AAAsC,MAAA,MAAM,EAAIG,KAAK,CAACJ;AAAtD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAdD;;GAAME,W;UACaN,S;;;KADbM,W;AAgBN,eAAeA,WAAf","sourcesContent":["import React, {Fragment} from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport HighlightedQuote  from '../components/quotes/HighlightedQuote'\r\n\r\n// import Comments from '../components/comments/Comments'\r\n\r\nconst DUMMY_QUOTES = [\r\n  {id: 1, author: 'Dabsia', text: 'Work hard and believe its going to pay offf'},\r\n  {id: 2, author: 'Dabo', text: 'Learning React is fun'}\r\n]\r\n\r\n\r\nconst QuoteDetail = () => {\r\n    const params = useParams()\r\n\r\n    const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId)\r\n\r\n    if(!quote){\r\n      return <p>No Quote found</p>\r\n    }\r\n\r\n  return (\r\n    <Fragment>\r\n        <HighlightedQuote text = {quote.text} author = {quote.author}/>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default QuoteDetail"]},"metadata":{},"sourceType":"module"}