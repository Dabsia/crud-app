{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Academind\\\\Routing\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Put from './components/Put';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n\n  const saveUser = e => {\n    e.preventDefault();\n    const details = {\n      name,\n      email\n    };\n    fetch('https://jsonplaceholder.typicode.com/users', {\n      method: 'POST',\n      body: JSON.stringify(details),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    }).then(response => response.json()).then(json => console.log(json));\n  };\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users/').then(response => response.json()).then(json => setUsers(json));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [users.map((user, id) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 35\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: saveUser,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"username\",\n        onChange: e => setName(e.target.value),\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"username\",\n        onChange: e => setEmail(e.target.value),\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Put, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 13\n  }, this);\n};\n\n_s(App, \"i7ZmOZIbiFIQSR0KBRZ4WWu3LHA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Academind/Routing/src/App.js"],"names":["React","useState","useEffect","Put","App","users","setUsers","name","setName","email","setEmail","saveUser","e","preventDefault","details","fetch","method","body","JSON","stringify","headers","then","response","json","console","log","map","user","id","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,kBAAhB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMU,QAAQ,GAAGC,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,OAAO,GAAG;AACdP,MAAAA,IADc;AACRE,MAAAA;AADQ,KAAhB;AAGAM,IAAAA,KAAK,CAAC,4CAAD,EAA+C;AACtDC,MAAAA,MAAM,EAAE,MAD8C;AAEtDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,OAAf,CAFgD;AAGtDM,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAH6C,KAA/C,CAAL,CAODC,IAPC,CAOKC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAPlB,EAQDF,IARC,CAQKE,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CARd;AAUD,GAfD;;AAiBArB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,KAAK,CAAC,6CAAD,CAAL,CACGM,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESE,IAAD,IAAUjB,QAAQ,CAACiB,IAAD,CAF1B;AAID,GALQ,CAAT;AAOE,sBAAQ;AAAA,eAEJlB,KAAK,CAACqB,GAAN,CAAU,CAACC,IAAD,EAAOC,EAAP,KAAc;AACtB,0BACE;AAAA,gCACE;AAAA,oBAAID,IAAI,CAACpB;AAAT;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAKoB,IAAI,CAAClB;AAAV;AAAA;AAAA;AAAA;AAAA,gBAFF,eAEsB;AAAA;AAAA;AAAA;AAAA,gBAFtB;AAAA,SAAUmB,EAAV;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KAPD,CAFI,eAaR;AAAM,MAAA,QAAQ,EAAEjB,QAAhB;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,UAA/B;AAA0C,QAAA,QAAQ,EAAEC,CAAC,IAAIJ,OAAO,CAACI,CAAC,CAACiB,MAAF,CAASC,KAAV,CAAhE;AAAkF,QAAA,KAAK,EAAGvB;AAA1F;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,WAAW,EAAC,UAAhC;AAA2C,QAAA,QAAQ,EAAEK,CAAC,IAAIF,QAAQ,CAACE,CAAC,CAACiB,MAAF,CAASC,KAAV,CAAlE;AAAoF,QAAA,KAAK,EAAErB;AAA3F;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbQ,eAmBR,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YAnBQ;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAsBH,CArDD;;GAAML,G;;KAAAA,G;AAsDN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Put from './components/Put';\n\n\nconst App = () => {\n\n  const [users, setUsers] = useState([])\n  \n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('')\n\n  const saveUser = e => {\n    e.preventDefault()\n    const details = {\n      name, email\n    }\n    fetch('https://jsonplaceholder.typicode.com/users', {\n  method: 'POST',\n  body: JSON.stringify(details),\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n})\n  .then((response) => response.json())\n  .then((json) => console.log(json));\n\n  }\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users/')\n      .then((response) => response.json())\n      .then((json) => setUsers(json));\n    \n  })\n  \n    return (<div>\n      {\n        users.map((user, id) => {\n          return (\n            <div key={id}>\n              <p>{user.name}</p>\n              <p>{ user.email}</p><br />\n            </div>\n          )\n        })\n      }\n      \n\n    <form onSubmit={saveUser}>\n      <input type='text' placeholder='username' onChange={e => setName(e.target.value)} value={ name} />\n      <input type='email' placeholder='username' onChange={e => setEmail(e.target.value)} value={email} />\n      <button>Save</button>\n    </form>\n    \n    <Put/>\n    </div>\n  )\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}