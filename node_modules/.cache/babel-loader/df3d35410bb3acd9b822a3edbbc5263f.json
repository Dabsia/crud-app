{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Academind\\\\Routing\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Put from './components/Put';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const details = {\n    name,\n    email\n  };\n\n  const onAdd = async () => {\n    const response = await fetch('https://jsonplaceholder.typicode.com/users', {\n      method: 'POST',\n      body: JSON.stringify(details),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    }).then(response => {\n      if (response.status !== 200) {\n        return;\n      } else {\n        return response.json();\n      }\n    }).then(data => {\n      setUsers(users => [...users, data]);\n    }).catch(err => console.log(err));\n  };\n};\n\n_s(App, \"d0pCIsiT52ccvSvLD2+QGuVKDtQ=\");\n\n_c = App;\n\nconst saveUser = e => {\n  _s2();\n\n  e.preventDefault();\n  onAdd();\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users/').then(response => response.json()).then(json => setUsers(json));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [users.map((user, id) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 35\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: saveUser,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"username\",\n        onChange: e => setName(e.target.value),\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"username\",\n        onChange: e => setEmail(e.target.value),\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Put, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 13\n  }, this);\n};\n\n_s2(saveUser, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Academind/Routing/src/App.js"],"names":["React","useState","useEffect","Put","App","users","setUsers","name","setName","email","setEmail","details","onAdd","response","fetch","method","body","JSON","stringify","headers","then","status","json","data","catch","err","console","log","saveUser","e","preventDefault","map","user","id","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Put from './components/Put';\n\n\nconst App = () => {\n\n  const [users, setUsers] = useState([])\n  \n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('')\n  const details = {\n      name, email\n    }\n\n  const onAdd = async () => {\n    const response = await fetch('https://jsonplaceholder.typicode.com/users', {\n  method: 'POST',\n  body: JSON.stringify(details),\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n})\n      .then((response) => {\n        if (response.status !== 200) {\n      return\n        }\n        else {\n          return response.json()\n        }\n  })\n      .then((data) => {\n        setUsers(users => [...users, data])\n      })\n    .catch(err => console.log(err))\n  };\n\n  }\n\n\n  const saveUser = e => {\n    e.preventDefault()\n    onAdd()\n    \n    \n    \n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users/')\n      .then((response) => response.json())\n      .then((json) => setUsers(json));\n    \n  })\n  \n    return (<div>\n      {\n        users.map((user, id) => {\n          return (\n            <div key={id}>\n              <p>{user.name}</p>\n              <p>{ user.email}</p><br />\n            </div>\n          )\n        })\n      }\n      \n\n    <form onSubmit={saveUser}>\n      <input type='text' placeholder='username' onChange={e => setName(e.target.value)} value={ name} />\n      <input type='email' placeholder='username' onChange={e => setEmail(e.target.value)} value={email} />\n      <button>Save</button>\n    </form>\n    \n    <Put/>\n    </div>\n  )\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}