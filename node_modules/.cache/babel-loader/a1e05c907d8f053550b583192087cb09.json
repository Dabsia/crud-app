{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Academind\\\\Routing\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Put from './components/Put';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users/').then(response => response.json()).then(json => setUsers(json));\n  });\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const userDetails = {\n    name,\n    email\n  };\n\n  const postDetails = () => {\n    fetch('https://jsonplaceholder.typicode.com/users', {\n      method: 'POST',\n      body: JSON.stringify(userDetails),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    }).then(response => response.json()).then(json => console.log(json));\n  };\n};\n\n_s(App, \"NmcHyamB+aru+jaMOaFQoECQY9M=\");\n\n_c = App;\n\nconst saveDetails = e => {\n  e.preventDefault();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [users.map((user, id) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: saveDetails,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"username\",\n        onChange: e => setName(e.target.value),\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"username\",\n        onChange: e => setEmail(e.target.value),\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Put, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 13\n  }, this);\n};\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Academind/Routing/src/App.js"],"names":["React","useState","useEffect","Put","App","users","setUsers","fetch","then","response","json","name","setName","email","setEmail","userDetails","postDetails","method","body","JSON","stringify","headers","console","log","saveDetails","e","preventDefault","map","user","id","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,kBAAhB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAqBL,QAAQ,CAAC,EAAD,CAAnC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,KAAK,CAAC,6CAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESE,IAAD,IAAUJ,QAAQ,CAACI,IAAD,CAF1B;AAID,GALQ,CAAT;AAOA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMc,WAAW,GAAG;AAClBJ,IAAAA,IADkB;AACZE,IAAAA;AADY,GAApB;;AAMA,QAAMG,WAAW,GAAG,MAAM;AACzBT,IAAAA,KAAK,CAAC,4CAAD,EAA+C;AACrDU,MAAAA,MAAM,EAAE,MAD6C;AAErDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,WAAf,CAF+C;AAGrDM,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAH4C,KAA/C,CAAL,CAOAb,IAPA,CAOMC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAPnB,EAQAF,IARA,CAQME,IAAD,IAAUY,OAAO,CAACC,GAAR,CAAYb,IAAZ,CARf;AASA,GAVD;AAYC,CAhCH;;GAAMN,G;;KAAAA,G;;AAkCJ,MAAMoB,WAAW,GAAGC,CAAC,IAAI;AACvBA,EAAAA,CAAC,CAACC,cAAF;AAEA,sBAAQ;AAAA,eAEJrB,KAAK,CAACsB,GAAN,CAAU,CAACC,IAAD,EAAOC,EAAP,KAAc;AACtB,0BACE;AAAA,gCACE;AAAA,oBAAID,IAAI,CAACjB;AAAT;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAKiB,IAAI,CAACf;AAAV;AAAA;AAAA;AAAA;AAAA,gBAFF,eAEsB;AAAA;AAAA;AAAA;AAAA,gBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KAPD,CAFI,eAWR;AAAM,MAAA,QAAQ,EAAEW,WAAhB;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,UAA/B;AAA0C,QAAA,QAAQ,EAAEC,CAAC,IAAIb,OAAO,CAACa,CAAC,CAACK,MAAF,CAASC,KAAV,CAAhE;AAAkF,QAAA,KAAK,EAAGpB;AAA1F;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,WAAW,EAAC,UAAhC;AAA2C,QAAA,QAAQ,EAAEc,CAAC,IAAIX,QAAQ,CAACW,CAAC,CAACK,MAAF,CAASC,KAAV,CAAlE;AAAoF,QAAA,KAAK,EAAElB;AAA3F;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXQ,eAiBR,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YAjBQ;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAoBH,CAvBC;;AAwBF,eAAeT,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Put from './components/Put';\n\n\nconst App = () => {\n\n  const [users, setUsers ] = useState([])\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users/')\n      .then((response) => response.json())\n      .then((json) => setUsers(json));\n    \n  })\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('')\n\n  const userDetails = {\n    name, email\n  }\n\n  \n\n  const postDetails = () => {\n   fetch('https://jsonplaceholder.typicode.com/users', {\n  method: 'POST',\n  body: JSON.stringify(userDetails),\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n})\n  .then((response) => response.json())\n  .then((json) => console.log(json));\n  }\n\n  }\n\n  const saveDetails = e => {\n    e.preventDefault()\n\n    return (<div>\n      {\n        users.map((user, id) => {\n          return (\n            <div>\n              <p>{user.name}</p>\n              <p>{ user.email}</p><br />\n            </div>\n          )\n        })\n    }\n    <form onSubmit={saveDetails}>\n      <input type='text' placeholder='username' onChange={e => setName(e.target.value)} value={ name} />\n      <input type='email' placeholder='username' onChange={e => setEmail(e.target.value)} value={email} />\n      <button>Save</button>\n    </form>\n    \n    <Put/>\n    </div>\n  )\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}